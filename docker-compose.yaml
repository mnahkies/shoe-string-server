version: "3.9"
networks:
  monitoring:
    external: true
    name: monitoring
  internal:
    external: true
    name: internal
  main:
    external: true
    name: main
services:
  haproxy_public:
    image: haproxy:2.4-alpine
    hostname: haproxy-public
    container_name: proxy_public
    networks:
      - main
    ports:
      - "${PUBLIC_IP}:${PUBLIC_PORT_HTTP}:80"
      - "${PUBLIC_IP}:${PUBLIC_PORT_HTTPS}:443"
    ulimits:
      nofile: 10240
    volumes:
      - type: bind
        source: ${DATA_BASE_PATH}/haproxy-public
        target: /usr/local/etc/haproxy
        read_only: true
      - type: bind
        source: ${DATA_BASE_PATH}/haproxy-public-ssl
        target: /usr/local/etc/ssl/certs
        read_only: true
      - type: bind
        source: ${DATA_BASE_PATH}/haproxy-public-stats
        target: /var/lib/haproxy-socket
        read_only: false
  haproxy_internal:
    image: haproxy:2.4-alpine
    hostname: haproxy-internal
    container_name: proxy_internal
    networks:
      - internal
    ports:
      - "${PRIVATE_IP}:${PRIVATE_PORT}:80"
      - "${PRIVATE_IP}:5432:5432"
    ulimits:
      nofile: 10240
    volumes:
      - type: bind
        source: ${DATA_BASE_PATH}/haproxy-internal
        target: /usr/local/etc/haproxy
        read_only: true
  influxdb:
    image: influxdb:1.8-alpine
    hostname: influxdb
    container_name: monitoring_influxdb
    networks:
      - monitoring
    healthcheck:
      test: [ "CMD", "influx", "ping" ]
      interval: 30s
      timeout: 10s
      retries: 3
    environment:
      INFLUXDB_HTTP_AUTH_ENABLED: "false"
      INFLUXDB_ADMIN_USER: ${INFLUXDB_ADMIN_USER}
      INFLUXDB_ADMIN_PASSWORD: ${INFLUXDB_ADMIN_PASSWORD}
    volumes:
      - type: bind
        source: ${DATA_BASE_PATH}/influxdb
        target: /var/lib/influxdb
  telegraf:
    image: telegraf:1.18-alpine
    hostname: telegraf
    container_name: monitoring_telegraf
    networks:
      - monitoring
    depends_on:
      - influxdb
      - haproxy_public
    environment:
      HOST_PROC: /rootfs/proc
      HOST_SYS: /rootfs/sys
      HOST_ETC: /rootfs/etc
    volumes:
      - type: bind
        source: ${DATA_BASE_PATH}/telegraf
        target: /etc/telegraf
        read_only: true
      - type: bind
        source: /var/run/docker.sock
        target: /var/run/docker.sock
        read_only: true
      - type: bind
        source: ${DATA_BASE_PATH}/haproxy-public-stats
        target: /var/run/haproxy-public-stats
        read_only: true
      - type: bind
        source: /sys
        target: /rootfs/sys
        read_only: true
      - type: bind
        source: /proc
        target: /rootfs/proc
        read_only: true
      - type: bind
        source: /etc
        target: /rootfs/etc
        read_only: true
      - type: bind
        source: /run/utmp
        target: /var/run/utmp
