global
    log         127.0.0.1 local2
    maxconn     4000

    # turn on stats unix socket, mostly-ro
    stats socket /var/lib/haproxy-socket/stats.sock level operator user haproxy group haproxy

    ssl-default-bind-ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:DHE-RSA-CHACHA20-POLY1305
    ssl-default-bind-ciphersuites TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256
    ssl-default-bind-options prefer-client-ciphers no-sslv3 no-tlsv10 no-tlsv11 no-tls-tickets

    ssl-default-server-ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:DHE-RSA-CHACHA20-POLY1305
    ssl-default-server-ciphersuites TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256
    ssl-default-server-options no-sslv3 no-tlsv10 no-tlsv11 no-tls-tickets

    # openssl dhparam -out "$DATA_BASE_PATH"/haproxy-public/dhparam 2048
    ssl-dh-param-file /usr/local/etc/haproxy/dhparam

resolvers docker_resolver
    nameserver dns 127.0.0.11:53

#---------------------------------------------------------------------
# common defaults that all the 'listen' and 'backend' sections will
# use if not designated in their block
#---------------------------------------------------------------------
defaults
    mode                    http
    log                     global
    option                  httplog
    option                  dontlognull
    option http-server-close
    option forwardfor       except 127.0.0.0/8
    option                  redispatch
    retries                 3
    timeout http-request    10s
    timeout queue           1m
    timeout connect         10s
    timeout client          1m
    timeout server          1m
    timeout http-keep-alive 10s
    timeout check           10s
    maxconn                 3000

    # allows proxy to start immediately when some/all backends are not available
    default-server init-addr none

#---------------------------------------------------------------------
# main frontend which proxys to the backends
#---------------------------------------------------------------------
frontend  external
    bind *:80
    # note: this must be commented for first start, when no certificates exist.
    bind *:443 ssl crt /usr/local/etc/ssl/certs/ alpn h2,http/1.1

    filter compression
    compression algo gzip

    acl acme path_beg /.well-known/acme-challenge

    http-request redirect scheme https if !acme !{ ssl_fc }
    http-request set-header X-Forwarded-Proto https if { ssl_fc }
    use_backend letsencrypt if acme

{{USE_BACKENDS}}

    default_backend             no-match

#---------------------------------------------------------------------
# stats frontend which powers prometheus metrics
#---------------------------------------------------------------------
frontend stats
   bind *:8404
   http-request use-service prometheus-exporter if { path /metrics }
   stats enable
   stats uri /stats
   stats refresh 10s

{{BACKENDS}}

backend no-match
    http-request deny deny_status 400

backend letsencrypt
    balance     roundrobin
    server      letsencrypt certbot:80 resolvers docker_resolver resolve-prefer ipv4
